What happens when you initialize a repository? Why do you need to do it?

	Creates a new git repository for the directory you are working in. Does not create an initial commit. Required to start using version control on that directory

How is the staging area different from the working directory and the repository?
What value do you think it offers?
	
	Staging area is a sort of 'virtual' space where you can add the information you want to commit, before actually making the commit. This allows you to add files seperately, remove files, change your mind etc. 

How can you use the staging area to make sure you have one commit per logical
change?

	Can use git diff to view changes between working directory and staging area to ensure all changes fit within '1 logical change'. 

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	Branches can be used to work on changes without affecting the master, so could be useful if you aren't sure you definitely want to implement the changes. May also be useful if there is a team of people each working on a new feature - they can work independantly on a branch and then merge them when complete

How do the diagrams help you visualize the branch structure?

	Branch structure can be quite complex so a visual aid helps. Also makes it easier to identify which commits can be reached from where

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

	Merges all changes between two branches. Copying one 'into' the other, and maintaining only one tag. All commits from both branches are kept and stores in the new git log

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?